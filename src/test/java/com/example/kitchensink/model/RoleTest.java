package com.example.kitchensink.model;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

/**
 * Unit tests for the Role class.
 * These tests ensure that the Role class is working as expected and that all fields are correctly handled.
 */
class RoleTest {

    private Role role;

    /**
     * Setup method to create a new instance of Role before each test.
     */
    @BeforeEach
    void setUp() {
        role = new Role();  // Create a new instance of the Role class
    }

    /**
     * Test the Role constructor with parameters.
     * This ensures that the Role class can be initialized with an ID and a name.
     */
    @Test
    void testConstructorWithParameters() {
        // Arrange
        String id = "1";
        String name = "Admin";

        // Act
        Role role = new Role(id, name);

        // Assert
        assertEquals(id, role.getId(), "The ID should be set correctly.");
        assertEquals(name, role.getName(), "The name should be set correctly.");
    }

    /**
     * Test the default constructor and setters.
     * This ensures that the no-args constructor and setters work as expected.
     */
    @Test
    void testDefaultConstructorAndSetters() {
        // Arrange
        String id = "2";
        String name = "User";

        // Act
        role.setId(id);
        role.setName(name);

        // Assert
        assertEquals(id, role.getId(), "The ID should be set correctly.");
        assertEquals(name, role.getName(), "The name should be set correctly.");
    }

    /**
     * Test the Lombok @Data annotation-generated methods.
     * This verifies the generated equals() and hashCode() methods are working correctly.
     */
    @Test
    void testEqualsAndHashCode() {
        // Arrange
        Role role1 = new Role("3", "Admin");
        Role role2 = new Role("3", "Admin");
        Role role3 = new Role("4", "User");

        // Act & Assert
        assertEquals(role1, role2, "Roles with the same ID and name should be equal.");
        assertNotEquals(role1, role3, "Roles with different IDs or names should not be equal.");
        assertEquals(role1.hashCode(), role2.hashCode(), "Roles with the same ID and name should have the same hash code.");
    }

    /**
     * Test the toString() method generated by Lombok @Data annotation.
     * This ensures that the toString method is formatted as expected.
     */
    @Test
    void testToString() {
        // Arrange
        Role role = new Role("5", "Manager");

        // Act
        String roleString = role.toString();

        // Assert
        assertTrue(roleString.contains("id=5"), "The toString method should include the role ID.");
        assertTrue(roleString.contains("name=Manager"), "The toString method should include the role name.");
    }
}
